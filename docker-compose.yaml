version: '3'
services:
  zoo:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo
    networks:
      - kafka-network

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:19092
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: compose-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: compose-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: compose-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: 'kafka-connect'
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components'
      CONNECT_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    networks:
      - kafka-network

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:19092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - kafka-network

  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   ports:
  #     - 8888:8080
  #   depends_on:
  #     - kafka
  #     - kafka-connect
  #     - schema-registry
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://kafka:19092,PLAINTEXT_HOST://kafka:19092
  #     KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
  #     KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: connect
  #     KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
  #     DYNAMIC_CONFIG_ENABLED: 'true'
  #   networks:
  #     - kafka-network

  spark-streaming:
    build: .
    ports:
      - 8081:8080
    environment:
      - SPARK_MODE=master
    volumes:
      - spark-data:/app/spark/data
    depends_on:
      - mongodb
    networks:
      - kafka-network

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: kafka_streaming
      MONGO_INITDB_COLLECTION: random_names
    volumes:
      - mongo-data:/data/db
    networks:
      - kafka-network

volumes:
  spark-data:
  mongo-data:
  
networks:
  kafka-network:
  airflow-kafka:
